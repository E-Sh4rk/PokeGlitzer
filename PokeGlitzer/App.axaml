<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Class="PokeGlitzer.App"
             xmlns:local="clr-namespace:PokeGlitzer"
             xmlns:convert="clr-namespace:PokeGlitzer.Converters">
    <Application.Styles>
      <FluentTheme Mode="Light"/>

      <Style Selector="TabItem">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Padding" Value="5 0"/>
      </Style>

      <!-- Remove tooltips for errors validation -->
      <Style Selector="DataValidationErrors">
        <Style.Resources>
          <DataTemplate x:Key="InlineDataValidationErrorTemplate">
            <ItemsControl Items="{Binding}" TextBlock.Foreground="{DynamicResource SystemControlErrorTextForegroundBrush}">
              <ItemsControl.Styles>
                <Style Selector="TextBlock">
                  <Setter Property="TextWrapping" Value="Wrap" />
                </Style>
              </ItemsControl.Styles>
            </ItemsControl>
          </DataTemplate>
          <ControlTemplate x:Key="InlineDataValidationContentTemplate" TargetType="DataValidationErrors">
            <DockPanel LastChildFill="True">
              <ContentControl x:Name="InlineDataValidationContentControl"
                              Margin="0,4,0,0"
                              Content="{Binding (DataValidationErrors.Errors)}"
                              ContentTemplate="{TemplateBinding ErrorTemplate}"
                              DataContext="{TemplateBinding Owner}"
                              DockPanel.Dock="Bottom"
                              IsVisible="False" />
              <ContentPresenter Name="PART_ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
            </DockPanel>
          </ControlTemplate>

          <DataTemplate x:Key="TooltipDataValidationErrorTemplate">
            <Panel Name="PART_InlineErrorTemplatePanel" Background="Transparent">
              <Panel.Styles>
                <Style Selector="Panel#PART_InlineErrorTemplatePanel">
                  <Setter Property="Margin" Value="8,0" />
                </Style>
                <Style Selector="Panel#PART_InlineErrorTemplatePanel ToolTip">
                  <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
                </Style>
                <Style Selector="Panel#PART_InlineErrorTemplatePanel ToolTip TextBlock">
                  <Setter Property="TextWrapping" Value="Wrap" />
                </Style>
              </Panel.Styles>
              <ToolTip.Tip>
                <ItemsControl Items="{Binding}" />
              </ToolTip.Tip>
              <Path Width="14"
                    Height="14"
                    Data="M14,7 A7,7 0 0,0 0,7 M0,7 A7,7 0 1,0 14,7 M7,3l0,5 M7,9l0,2"
                    Stroke="{DynamicResource SystemControlErrorTextForegroundBrush}"
                    StrokeThickness="2" />
            </Panel>
          </DataTemplate>
          <ControlTemplate x:Key="TooltipDataValidationContentTemplate" TargetType="DataValidationErrors">
            <DockPanel LastChildFill="True">
              <ContentControl Content="{Binding (DataValidationErrors.Errors)}"
                              ContentTemplate="{TemplateBinding ErrorTemplate}"
                              DataContext="{TemplateBinding Owner}"
                              DockPanel.Dock="Right"
                              IsVisible="False" />
              <ContentPresenter Name="PART_ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
            </DockPanel>
          </ControlTemplate>
        </Style.Resources>

        <Setter Property="Template" Value="{StaticResource InlineDataValidationContentTemplate}" />
        <Setter Property="ErrorTemplate" Value="{StaticResource InlineDataValidationErrorTemplate}" />
      </Style>
      
    </Application.Styles>

  <Application.Resources>
    <convert:SelectionToColor x:Key="s2c"/>
    <convert:PokemonToBitmap x:Key="p2b"/>
    <convert:ItemToBitmap x:Key="i2b"/>
    <convert:PokemonToShortLabel x:Key="p2sl"/>
    <convert:NumberToStringConverter x:Key="n2s"/>
    <convert:EggTypeToIndex x:Key="egg2i"/>
    <convert:PkmnGenderTypeToIndex x:Key="pgender2i"/>
    <convert:PokemonToStringConverter x:Key="p2s"/>
    <convert:ByteStringConverter x:Key="bsc"/>
    <convert:SubstructureToColor x:Key="ss2c"/>
    <convert:SubstructureToText x:Key="s2t"/>
    <convert:BoolToColor x:Key="b2c"/>
    <convert:BoolToInt x:Key="b2i"/>
  </Application.Resources>

  <Application.DataTemplates>
    <DataTemplate DataType="{x:Type local:PokemonExt}">
      <Canvas Width="68" Height="56">
        <Canvas.ContextMenu>
          <ContextMenu>
            <MenuItem Header="_Open Interpreted Data Editor" Command="{Binding $parent[Window].DataContext.OpenInterpretedEditor}" CommandParameter="{Binding pkmn.DataLocation}" />
            <MenuItem Header="_Open Hex Data Editor (Assisted)" Command="{Binding $parent[Window].DataContext.OpenDataEditor}" CommandParameter="{Binding pkmn.DataLocation}" >
              <!--
              <MenuItem.Icon>
                <Image Source="/WpfTutorialSamples;component/Images/cut.png" />
              </MenuItem.Icon>
              -->
            </MenuItem>
            <MenuItem Header="_Open Hex Data Editor" Command="{Binding $parent[Window].DataContext.OpenRawEditor}" CommandParameter="{Binding pkmn.DataLocation}" />
            <Separator/>
            <MenuItem Header="_Copy" Command="{Binding $parent[Window].DataContext.Copy}" CommandParameter="{Binding pkmn.DataLocation}" />
            <MenuItem Header="_Cut" Command="{Binding $parent[Window].DataContext.Cut}" CommandParameter="{Binding pkmn.DataLocation}" />
            <MenuItem Header="_Paste" Command="{Binding $parent[Window].DataContext.Paste}" CommandParameter="{Binding pkmn.DataLocation}"
                      IsEnabled="{Binding $parent[Window].DataContext.CopiedData, Converter={x:Static ObjectConverters.IsNotNull}}"/>
            <MenuItem Header="_Delete" Command="{Binding $parent[Window].DataContext.Delete}" CommandParameter="{Binding pkmn.DataLocation}" />
            <Separator/>
            <MenuItem Header="_Open GP window starting here" Command="{Binding $parent[Window].DataContext.OpenGPAfter}" CommandParameter="{Binding pkmn.DataLocation}" />
            <MenuItem Header="_Open GP window ending here" Command="{Binding $parent[Window].DataContext.OpenGPBefore}" CommandParameter="{Binding pkmn.DataLocation}" />
          </ContextMenu>
        </Canvas.ContextMenu>
        <Rectangle ZIndex="0" Canvas.Left="0" Canvas.Top="0" Width="67" Height="55" Opacity="150" Fill="{Binding selected, Converter={StaticResource s2c}}" Stroke="Black" StrokeThickness="1" Stretch="None" />
        <Rectangle ZIndex="1" Canvas.Left="0" Canvas.Top="0" Width="67" Height="55" Opacity="200" Fill="Red" IsVisible="{Binding !pkmn.View.ChecksumValid}" />
        <Image ZIndex="2" Source="{Binding pkmn.View.Interpreted, Converter={StaticResource p2b}}" IsVisible="{Binding pkmn.View.HasData}" />
        <Image ZIndex="3" Canvas.Right="3" Canvas.Bottom="3" Source="{Binding pkmn.View.Interpreted, Converter={StaticResource i2b}}" IsVisible="{Binding pkmn.View.HasData}" />
        <TextBlock ZIndex="4" Canvas.Left="2" Canvas.Top="2" Text="{Binding pkmn.View.Interpreted, Converter={StaticResource p2sl}}" IsVisible="{Binding pkmn.View.HasData}"/>
        <Button ZIndex="5" Width="67" Height="55" Foreground="Transparent" Opacity="0" Command="{Binding $parent[Window].DataContext.SelectSlot}" CommandParameter="{Binding pkmn.DataLocation}" />
      </Canvas>
    </DataTemplate>

  </Application.DataTemplates>
</Application>
